{"version":3,"sources":["logo.jpeg","components/LaunchItem.js","components/MissionKey.js","components/launches.components.js","components/launch.js","App.js","reportWebVitals.js","index.js"],"names":["LaunchItem","launch","flight_number","mission_name","details","launch_success","static_fire_date_utc","className","classNames","format","to","MissionKey","LAUNCHES_QUERY","gql","Launches","query","loading","error","data","console","log","launches","map","Component","LAUNCH_QUERY","Launch","this","props","match","params","parseInt","variables","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","App","src","logo","alt","style","width","display","margin","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c079be8f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6dd381cc.jpeg\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport Moment from 'react-moment';\nimport {Link} from 'react-router-dom'\n\nconst LaunchItem = ({\n  launch: {\n    flight_number,\n    mission_name,\n    details,\n    launch_success,\n    static_fire_date_utc,\n  },\n}) => {\n  return (\n    <div className=\"card card-body mb-3\">\n      <div className=\"row\">\n        <div className=\"col-mb-9\">\n          <h4>\n            Mission: üöÄ\n            <span\n              className={classNames({\n                \"text-success\": launch_success,\n                \"text-danger\": !launch_success,\n              })}\n            >\n              {mission_name}\n            </span>\n          </h4>\n          <p>Details: {details}</p>\n          <p>Fire Time: <Moment format=\"YYYY-MM-DD HH-mm\">{static_fire_date_utc}</Moment> </p>\n        </div>\n        <div className=\"col-mb-3\">\n          <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\"> Launch Details </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LaunchItem;\n//<p>Flight Number:{flight_number}</p>\n//\n","import React from 'react'\n\nconst MissionKey = () => {\n    return (\n        <div className=\"my-3\">\n            <p>\n              <span className=\"px-3 mr-2 bg-success\" />  =  Success\n\n            </p>\n            <p>\n              <span className=\"px-3 mr-2 bg-danger\" />  =  Fail\n\n            </p>\n            \n        </div>\n    )\n}\n\nexport default MissionKey\n","//making query to graphql \nimport React, { Component } from 'react'\nimport gql from 'graphql-tag'; // makes the queries\nimport {Query} from 'react-apollo'; \nimport LaunchItem from './LaunchItem.js'\nimport MissionKey from './MissionKey.js'\n\n\n//below similar to graphiql in browser\nconst LAUNCHES_QUERY = gql` \n query LaunchesQuery {\n     launches {\n            flight_number\n            mission_name\n            details\n            static_fire_date_utc\n            launch_success\n        }\n }\n`;\n\nclass Launches extends Component {\n    render() {\n        return (\n            <>\n           \n                <h1 className=\"display-4 my-3\"> Launches </h1> \n                <MissionKey />\n                <Query query={LAUNCHES_QUERY}>\n                    {({loading, error, data}) => {\n                            if(loading) return <h4> ‚è≥ Loading... </h4>\n                            if(error) console.log(error)\n                            console.log(data)\n\n                            return <> {\n                                data.launches.map(launch => (\n                                    <LaunchItem key={launch.flight_number} launch={launch} />\n                                ))\n                            } </>\n\n                        }\n                    }\n                </Query>\n            </>\n        )\n    }\n}\n\nexport default Launches;\n","import React, { Component, Fragment } from 'react'\nimport gql from 'graphql-tag'\nimport {Query} from 'react-apollo'\nimport {Link} from 'react-router-dom'\nimport classNames from 'classnames'\n\nconst LAUNCH_QUERY = gql`\nquery LaunchQuery($flight_number: Int!){\n    launch(flight_number: $flight_number){ \n        flight_number\n        mission_name\n        details\n        launch_success\n        rocket{\n            rocket_id\n            rocket_name\n            rocket_type\n        }\n    }\n}\n`;\n\n\n\n class Launch extends Component {\n    render() {\n        \n        let {flight_number} = this.props.match.params;\n        flight_number = parseInt(flight_number)\n       \n        return (\n            <Fragment>\n                <Query query={LAUNCH_QUERY} variables={{flight_number}} >\n                 \n                    {\n                    \n                     ({loading, error, data}) => {\n                     console.log(data)\n                        if(loading) return <h4> ‚è≥ Loading... </h4>;\n                        if(error) console.log(error);\n                     \n\n                        const {  flight_number,\n                            mission_name,\n                            details,\n                            launch_success,\n                            rocket: {\n                                rocket_id,\n                                rocket_name,\n                                rocket_type,\n                            }} = data.launch\n\n                        return (<div>\n                            <h1 className='display-4 my-3'>\n                                <span className='text-dark'> Mission:  </span>\n                                {mission_name} \n                            </h1>\n                            <h4 className='mb-3'> Launch Details</h4>\n                            <ul className=\"list-group\">\n                            <li className='list-group-item'>{flight_number}</li>\n                            <li className='list-group-item'>{details}</li>\n                            <li className='list-group-item'> <span   className={classNames({\n                                             \"text-success\": launch_success,\n                \"                             text-danger\": !launch_success,\n                                         })}></span>{launch_success ? 'YES' : \"NO\"}</li>\n                            \n                            </ul>\n                            <h4 className=\"my-3\">Rocket Details</h4>\n                            <ul className=\"list-group\">\n                                        <li className=\"list-group-item\"> Rocket ID: {rocket_id}</li>\n                                        <li className=\"list-group-item\"> Rocket ID: {rocket_name}</li>\n                                        <li className=\"list-group-item\"> Rocket ID: {rocket_type}</li>\n\n                            </ul>\n                                <hr/>\n                                <Link to=\"/\" className=\"btn btn-secondary\" > Back To Earth!</Link>\n                            \n                        </div>\n\n                        )\n\n                    }}\n                </Query> \n            </Fragment>\n        )\n    }\n}\n\nexport default Launch;\n\n","import logo from \"./logo.jpeg\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport Launches from './components/launches.components.js'\nimport Launch from './components/launch.js'\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport \"./App.css\";\n\nconst client = new ApolloClient({\n  uri: \"/graphql\",\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <BrowserRouter >\n      <div className=\"container\">\n        <img\n          src={logo}\n          alt=\"SpaceX\"\n          style={{ width: 300, display: \"block\", margin: \"auto\" }}\n        />\n         <Route exact path=\"/\" component={Launches}/>\n         <Route exact path=\"/launch/:flight_number\" component={Launch}/>\n      </div>\n      </BrowserRouter>\n    </ApolloProvider>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}